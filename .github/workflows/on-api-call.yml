# Used to trigger a next-development version build during release time as a release dependency.
# Since it's used during release, we only need to do the build step and deploy to maven and skip the rest.

name: Release on api call

on:
  workflow_dispatch:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      jahia_version: ${{ steps.tags.outputs.jahia_version }}
      image_tag: ${{ steps.tags.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: jahia-default-maven-m2-cache
      - name: Save/Restore build artifacts from cache
        uses: actions/cache@v3
        with:
          key: run-${{ github.run_id }}
          path: |
            ./**/target/**
      - name: Set environment variables from parameters
        shell: bash
        run: |
          echo "NEXUS_USERNAME=${{ secrets.NEXUS_USERNAME }}" >> $GITHUB_ENV
          echo "NEXUS_PASSWORD=${{ secrets.NEXUS_PASSWORD }}" >> $GITHUB_ENV
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Store project version
        shell: bash
        run: mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec > jahia.version
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v6
      - name: Determine tag
        shell: bash
        run: |
          if [ "${{ github.event_name }}" != "pull_request" ]; then
            cp jahia.version image.tag
          else
            echo `cat jahia.version`-"${{ steps.branch-name.outputs.current_branch}}" > image.tag
          fi
      - id: tags
        name: Set Output variables
        run: |
          echo "::set-output name=jahia_version::`cat jahia.version`"
          echo "::set-output name=image_tag::`cat image.tag`"
      - name: Display Output variables
        run: |
          echo "OUTPUT: jahia_version = ${{steps.tags.outputs.jahia_version}}"
          echo "OUTPUT: image_tag = ${{steps.tags.outputs.image_tag}}"
      - name: mvn clean deploy
        shell: bash
        run: mvn -s .github/maven.settings.xml -e -Dimage.tag=${{steps.tags.outputs.image_tag}} clean deploy de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Pgwt-production,unit-tests,docker,docker-core-plugin -Dbamboo.buildNumber=${{ github.run_id }}
      - name: Compile GWT development
        shell: bash
        run: |
          cd gwt/
          mvn -s ../.github/maven.settings.xml -e \
            -Dimage.tag=${{steps.tags.outputs.image_tag}} \
            clean deploy \
            -Pgwt-development \
            -Dbamboo.buildNumber=${{ github.run_id }}
      - uses: jahia/jahia-modules-action/docker-tags@v2
        with:
          docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_password: ${{ secrets.DOCKERHUB_PASSWORD }}
          version: ${{steps.tags.outputs.image_tag}}
          repo: "jahia-core-dev"
          dry-run: false
      - uses: jahia/jahia-modules-action/slack-jahia@v2
        if: ${{ failure() }}
        with:
          job-event: "fail"
          skip-docker: true
          slack-webhook: ${{ secrets.SLACK_WEBHOOK_TEAM_PRODUCT_SNAPSHOTS_NOTIFICATIONS }}
