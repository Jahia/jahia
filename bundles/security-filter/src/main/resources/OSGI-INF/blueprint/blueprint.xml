<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd"
>
    <!-- Core -->
    <bean id="permissionService" class="org.jahia.bundles.securityfilter.core.PermissionServiceImpl">
        <property name="context" ref="blueprintBundleContext"/>
        <property name="permissionsConfig" ref="permissionsConfig"/>
        <property name="authorizationConfig" ref="authorizationConfig"/>
    </bean>

    <service interface="org.jahia.services.securityfilter.PermissionService" ref="permissionService"/>

    <service interface="org.osgi.service.cm.ManagedService" ref="permissionService">
        <service-properties>
            <entry key="service.pid" value="org.jahia.bundles.api.security"/>
        </service-properties>
    </service>

    <service interface="org.jahia.bin.filters.AbstractServletFilter">
        <bean class="org.jahia.bundles.securityfilter.core.ContextFilter">
            <property name="order" value="-1"/>
            <property name="permissionService" ref="permissionService"/>
            <property name="urlPatterns" value="/*"/>
        </bean>
    </service>

    <!-- Config -->
    <bean id="authorizationConfig" class="org.jahia.bundles.securityfilter.core.AuthorizationConfig"/>

    <service interface="org.osgi.service.cm.ManagedServiceFactory" ref="authorizationConfig">
        <service-properties>
            <entry key="service.pid" value="org.jahia.bundles.api.authorization"/>
            <entry key="service.description" value="API authorization configuration service"/>
            <entry key="service.vendor" value="Jahia Solutions Group SA"/>
        </service-properties>
    </service>

    <!-- CORS -->
    <bean id="corsFilter" class="org.jahia.bundles.securityfilter.cors.CorsFilter">
        <property name="authorizationConfig" ref="authorizationConfig"/>
        <property name="urlPatterns" value="/modules/graphql"/>
        <property name="parameters">
            <map>
                <entry key="cors.preflight.maxage" value="3600"/>
            </map>
        </property>
    </bean>

    <service interface="org.jahia.bin.filters.AbstractServletFilter" ref="corsFilter"/>
    <service interface="org.osgi.service.cm.ManagedService" ref="corsFilter">
        <service-properties>
            <entry key="service.pid" value="org.jahia.bundles.api.security"/>
        </service-properties>
    </service>

    <!-- Views -->
    <service interface="org.jahia.services.render.filter.RenderFilter">
        <bean class="org.jahia.bundles.securityfilter.views.PermissionFilter">
            <property name="description" value="Filter that checks permission configuration before rendering a view"/>
            <property name="permissionService" ref="permissionService"/>
            <property name="priority" value="26"/>
            <property name="applyOnTemplateTypes" value="json,html"/>
            <property name="applyOnConfigurations" value="page"/>
        </bean>
    </service>

    <service interface="org.jahia.services.render.filter.RenderFilter">
        <bean class="org.jahia.bundles.securityfilter.views.AjaxPermissionFilter">
            <property name="description"
                      value="Filter that checks permission configuration specifically for an AJAX request before rendering a view"/>
            <property name="permissionService" ref="permissionService"/>
            <property name="priority" value="26"/>
            <property name="applyOnConfigurations" value="page"/>
        </bean>
    </service>

    <!-- JWT -->
    <bean id="jwtConfig" class="org.jahia.bundles.securityfilter.jwt.JWTConfig"/>

    <service interface="org.jahia.bin.filters.AbstractServletFilter">
        <bean class="org.jahia.bundles.securityfilter.jwt.JWTFilter">
            <property name="jwtConfig" ref="jwtConfig"/>
            <property name="permissionService" ref="permissionService"/>
            <property name="urlPatterns" value="/*"/>
        </bean>
    </service>

    <service interface="org.jahia.bundles.securityfilter.JWTService" ref="jwtConfig"/>
    <service interface="org.osgi.service.cm.ManagedService" ref="jwtConfig">
        <service-properties>
            <entry key="service.pid" value="org.jahia.bundles.jwt.token"/>
            <entry key="service.description" value="JWT token configuration service"/>
            <entry key="service.vendor" value="Jahia Solutions Group SA"/>
        </service-properties>
    </service>

    <!-- Legacy -->
    <bean id="permissionsConfig" class="org.jahia.bundles.securityfilter.legacy.PermissionsConfig">
        <property name="restrictedAccessPermissionFallbackName" value="addChildNodes_default"/>
        <property name="restrictedAccessPermissionName" value="api-access"/>
    </bean>

    <service interface="org.osgi.service.cm.ManagedServiceFactory" ref="permissionsConfig">
        <service-properties>
            <entry key="service.pid" value="org.jahia.modules.api.permissions"/>
            <entry key="service.description" value="JCREST-API configuration service"/>
            <entry key="service.vendor" value="Jahia Solutions Group SA"/>
        </service-properties>
    </service>
</blueprint>
