<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- You can change here the cache implementation that Jahia will use, notably for it's HTML cache, internal
         caches. For DB caches, this is now managed by the Hibernate implementation, and is configured in the
         applicationcontext-hibernate.xml file.
    -->
    <bean id="noCacheProvider" class="org.jahia.services.cache.dummy.DummyCacheProvider"/>

    <bean id="ehCacheProvider" class="org.jahia.services.cache.ehcache.EhCacheProvider" depends-on="jahiaProperties">
        <property name="configurationResource" value="#{jahiaProperties['jahia.cache.configuration.resource'] != null ? jahiaProperties['jahia.cache.configuration.resource'] : ('classpath:/ehcache-jahia' + (jahiaProperties['cluster.activated'] == 'true' ? '-cluster.xml' : '.xml'))}"/>
        <!-- This property allows to fix a limit for cache entries dependencies management,
if an entry have more than this value of dependencies then
when we flush this entry we will flush the whole cache
        A value of 0 disables groups cache
        -->
        <property name="groupsSizeLimit" value="0"/>
        <property name="jmxActivated" value="true"/>
        <!-- enable cache statistics by default -->
        <property name="statisticsEnabled" value="true"/>
    </bean>

    <bean id="bigEhCacheProvider" class="org.jahia.services.cache.ehcache.EhCacheProvider" depends-on="jahiaProperties">
        <property name="configurationResource" value="#{jahiaProperties['jahia.cache.html.configuration.resource'] != null ? jahiaProperties['jahia.cache.html.configuration.resource'] : ('classpath:/ehcache-jahia-html' + (jahiaProperties['cluster.activated'] == 'true' ? '-cluster.xml' : '.xml'))}"/>
        <!-- This property allows to fix a limit for cache entries dependencies management,
if an entry have more than this value of dependencies then
when we flush this entry we will flush the whole cache
        A value of 0 disables groups cache
        -->
        <property name="groupsSizeLimit" value="0"/>
        <property name="jmxActivated" value="true"/>
        <!-- enable cache statistics by default -->
        <property name="statisticsEnabled" value="true"/>
    </bean>

    <bean id="JahiaCacheService" class="org.jahia.services.cache.CacheFactory" parent="jahiaServiceTemplate" factory-method="getInstance" init-method="start">
        <property name="cacheProviders">
            <map>
                <entry key="default" value-ref="ehCacheProvider" />
                <entry key="ehcache" value-ref="ehCacheProvider"/>
                <entry key="nocache" value-ref="noCacheProvider"/>
                <entry key="bigcache" value-ref="bigEhCacheProvider"/>
            </map>
        </property>
        <property name="cacheProviderForCache">
            <map>
                <entry key="FileContentCache" value="bigcache"/>
            </map>
        </property>
    </bean>

    <bean id="cacheKeyGenerator" class="org.jahia.services.render.filter.cache.DefaultCacheKeyGenerator">
        <property name="partGenerators">
            <list>
                <bean class="org.jahia.services.render.filter.cache.LanguageCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.PathCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.CanonicalPathCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.TemplateCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.TemplateTypeCacheKeyPartGenerator"/>
                <ref bean="${org.jahia.aclCacheKeyPartGenerator.implementation:aclCacheKeyPartGenerator}"/>
                <bean class="org.jahia.services.render.filter.cache.ContextCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.WrappedCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.CustomCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.QueryStringCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.TemplateNodesCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.ResourceIDCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.InAreaCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.SiteCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.ModuleParamsCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.AjaxCacheKeyPartGenerator"/>
                <ref bean="areaResourceCacheKeyPartGenerator"/>
                <bean class="org.jahia.services.render.filter.cache.ReadOnlyCacheKeyPartGenerator"/>
            </list>
        </property>
    </bean>

    <bean id="areaResourceCacheKeyPartGenerator" class="org.jahia.services.render.filter.cache.AreaResourceCacheKeyPartGenerator">
        <property name="disabled" value="#{jahiaProperties['useNewAggregateAndCacheImplementation'] != null ? !jahiaProperties['useNewAggregateAndCacheImplementation'] : false}"/>
    </bean>

    <bean id="aclCacheKeyPartGenerator" class="org.jahia.services.render.filter.cache.AclCacheKeyPartGenerator">
        <property name="groupManagerService" ref="JahiaGroupManagerService"/>
        <property name="cacheProvider" ref="ehCacheProvider"/>
        <property name="template" ref="jcrTemplate"/>
        <property name="useGroupsSignature" value="${org.jahia.aclCacheKeyPartGenerator.useGroupsSignature:true}"/>
        <property name="groupsSignatureAclPathsToQuery" value="${org.jahia.aclCacheKeyPartGenerator.groupsSignatureAclPathsToQuery:/j:acl,/sites,/modules,/mounts}"/>
        <property name="usePerUser" value="${org.jahia.aclCacheKeyPartGenerator.usePerUser:false}"/>
    </bean>

    <bean id="legacyAclCacheKeyPartGenerator" class="org.jahia.services.render.filter.cache.LegacyAclCacheKeyPartGenerator">
        <property name="groupManagerService" ref="JahiaGroupManagerService"/>
        <property name="cacheProvider" ref="ehCacheProvider"/>
        <property name="template" ref="jcrTemplate"/>
    </bean>

    <bean id="ModuleCacheProvider" class="org.jahia.services.render.filter.cache.ModuleCacheProvider">
        <property name="cacheProvider" ref="bigEhCacheProvider"/>
        <property name="keyGenerator" ref="cacheKeyGenerator"/>
        <property name="aggregateCacheFilter" ref="cacheFilter"/>
    </bean>

    <bean id="moduleGeneratorQueue" class="org.jahia.services.render.filter.cache.ModuleGeneratorQueue">
        <property name="maxModulesToGenerateInParallel" value="${maxModulesToGenerateInParallel}"/>
        <property name="moduleGenerationWaitTime" value="${moduleGenerationWaitTime}"/>
        <property name="minimumIntervalAfterLastAutoThreadDump" value="${minimumIntervalAfterLastAutoThreadDump}"/>
        <property name="threadDumpToSystemOut" value="${moduleGenerationThreadDumpToSystemOut}"/>
        <property name="threadDumpToFile" value="${moduleGenerationTthreadDumpToFile}"/>
    </bean>

    <bean id="cacheFilter" class="org.jahia.services.render.filter.cache.AggregateCacheFilter">
        <property name="disabled" value="${useNewAggregateAndCacheImplementation:true}"/>
        <property name="priority" value="16" />
        <property name="description" value="Module content caching filter." />
        <property name="cacheProvider" ref="ModuleCacheProvider"/>
        <property name="skipOnTemplateTypes" value="json"/>
        <property name="skipOnConfigurations" value="include,wrapper,option"/>
        <property name="applyOnModes" value="live"/>
        <property name="generatorQueue" ref="moduleGeneratorQueue"/>
        <property name="dependenciesLimit" value="1000"/>
        <property name="skipLatchForPaths" >
            <set>
                <value>/modules</value>
            </set>
        </property>
        <property name="skipLatchForConfigurations">
            <set>
                <value>page</value>
            </set>
        </property>
    </bean>

    <bean class="org.jahia.services.render.filter.cache.CacheFilter">
        <property name="disabled" value="#{jahiaProperties['useNewAggregateAndCacheImplementation'] != null ? !jahiaProperties['useNewAggregateAndCacheImplementation'] : false}"/>
        <property name="priority" value="16.5"/>
        <property name="description" value="Cache filter, provides the html result (either from the cache or by generating it) of the fragment and caches it if necessary"/>
        <property name="skipOnTemplateTypes" value="json"/>
        <property name="skipOnConfigurations" value="include,wrapper,option"/>
        <property name="applyOnModes" value="live"/>
        <property name="cacheProvider" ref="ModuleCacheProvider"/>
        <property name="generatorQueue" ref="moduleGeneratorQueue"/>
        <property name="dependenciesLimit" value="1000"/>
    </bean>

    <bean id="abstractFlushCacheOnNodeBackgroundAction" class="org.jahia.services.content.rules.FlushCacheOnNodeBackgroundAction" abstract="true">
        <property name="cacheProvider" ref="ModuleCacheProvider"/>
        <property name="urlResolverFactory" ref="urlResolverFactory"/>
    </bean>

    <bean id="cacheReferencesFilter" class="org.jahia.services.render.filter.cache.ReferencesToDependenciesFilter">
        <property name="disabled" value="${disableOutputCache:false}"/>
        <property name="priority" value="25" />
        <property name="description" value="Convert references inside jmix:referencesInField to dependencies of the resource" />
        <property name="skipOnTemplateTypes" value="json"/>
        <property name="skipOnConfigurations" value="page"/>
        <property name="applyOnModes" value="live"/>
    </bean>

    <bean id="FileCacheManager" class="org.jahia.services.content.files.FileCacheManager">
        <property name="cacheFactory" ref="JahiaCacheService"/>
    </bean>
</beans>
