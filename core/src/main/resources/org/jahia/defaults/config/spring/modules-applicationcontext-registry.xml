<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:webflow="http://www.springframework.org/schema/webflow-config"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/webflow-config
       http://www.springframework.org/schema/webflow-config/spring-webflow-config-2.4.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean name="org.jahia.modules.default.ModuleRegistry"
          class="org.jahia.services.templates.TemplatePackageRegistry$SpringModuleRegistry">
        <property name="registry" ref="JahiaExtensionsRegistry"/>
    </bean>

    <bean id="modulePlaceholderConfig"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties" ref="jahiaProperties"/>
        <property name="locations" ref="modulePlaceholderConfigLocations"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="localOverride" value="true"/>
    </bean>

    <util:list id="modulePlaceholderConfigLocations" value-type="java.lang.String">
        <value>osgibundle:jahia-modules-*.properties</value>
        <value>osgibundle:jahia/jahia-modules-*.properties</value>
        <value>rootclasspath*:jahia-modules-*.properties</value>
        <value>rootclasspath*:jahia/jahia-modules-*.properties</value>
    </util:list>

    <bean name="managerEditorConfigurerModules" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.jahia.services.uicomponents.bean.contentmanager.Column">
                    <bean class="org.jahia.services.uicomponents.bean.contentmanager.ColumnPropertyEditor"/>
                </entry>
                <entry key="org.jahia.services.uicomponents.bean.contentmanager.Repository">
                    <bean class="org.jahia.services.uicomponents.bean.contentmanager.RepositoryPropertyEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean name="editmodeEditorConfigurerModules"
          class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <property name="customEditors">
            <map>
                <entry key="org.jahia.services.uicomponents.bean.editmode.EngineTab">
                    <bean class="org.jahia.services.uicomponents.bean.editmode.EngineTabPropertyEditor"/>
                </entry>
                <entry key="org.jahia.services.uicomponents.bean.Visibility">
                    <bean class="org.jahia.services.uicomponents.bean.VisibilityPropertyEditor"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="jBPMModuleProcessLoader" class="org.jahia.services.workflow.jbpm.JBPMModuleProcessLoader">
        <property name="jbpm6WorkflowProvider" ref="jBPMProvider"/>
        <property name="mailTemplateRegistry" ref="mailTemplateRegistry"/>
        <property name="processes">
            <list>
                <value>osgibundle:org/jahia/modules/**/*.bpmn2</value>
            </list>
        </property>
        <property name="mailTemplates">
            <list>
                <value>osgibundle:org/jahia/modules/**/*.mail</value>
            </list>
        </property>
    </bean>

    <bean id="springTypeConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" lazy-init="true"/>

    <bean id="JahiaFlowConversionService" class="org.jahia.services.render.webflow.JahiaFlowConversionService" lazy-init="true">
        <constructor-arg ref="springTypeConversionService"/>
    </bean>

    <bean id="JahiaBeanValidationHintResolver" class="org.jahia.services.render.webflow.JahiaBeanValidationHintResolver" lazy-init="true"/>

    <bean id="JahiaViewFactoryCreator" class="org.jahia.services.render.webflow.BundleViewFactoryCreator" lazy-init="true"/>

    <webflow:flow-builder-services id="jahiaFlowBuilderServices" development="true"
                                   conversion-service="JahiaFlowConversionService"
                                   validation-hint-resolver="JahiaBeanValidationHintResolver"
                                   view-factory-creator="JahiaViewFactoryCreator"
                                   validator="validatorFactoryBean"/>

    <webflow:flow-registry id="jahiaFlowRegistry" base-path="osgibundle:/"
                           flow-builder-services="jahiaFlowBuilderServices">
        <webflow:flow-location-pattern value="**/*.flow/flow.xml"/>
    </webflow:flow-registry>

    <bean id="moduleSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          depends-on="settingsBean" lazy-init="true">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="org.jahia.modules"/>
        <property name="hibernateProperties">
            <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <property name="properties">
                    <map>
                        <entry key="hibernate.dialect" value="${hibernate.dialect}"/>
                        <entry key="hibernate.hbm2ddl.auto" value=""/>
                        <entry key="hibernate.show_sql" value="false"/>
                        <entry key="hibernate.jdbc.batch_size" value="16"/>
                        <entry key="hibernate.default_batch_fetch_size" value="16"/>
                        <entry key="hibernate.max_fetch_depth" value="3"/>
                        <entry key="hibernate.query.substitutions" value="true 1, false 0"/>
                        <entry key="hibernate.generate_statistics" value="false"/>
                        <entry key="hibernate.id.new_generator_mappings" value="false"/>
                        <entry key="hibernate.implicit_naming_strategy" value="org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl" />
                    </map>
                </property>
            </bean>
        </property>
    </bean>

    <bean class="org.jahia.params.valves.AuthPipelineInitializer" lazy-init="true">
        <property name="authPipeline" ref="authPipeline"/>
    </bean>
</beans>
