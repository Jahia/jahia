<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean class="org.jahia.test.bin.TestBean">
        <property name="coreTests" value="true"/>
        <property name="priority" value="40"/>

        <property name="testCases">
            <list>
                <value>org.apache.jackrabbit.test.api.TestAll</value>
                <value>org.apache.jackrabbit.test.api.lock.TestAll</value>
                <value>org.apache.jackrabbit.test.api.nodetype.TestAll</value>
                <value>org.apache.jackrabbit.test.api.observation.TestAll</value>
                <value>org.apache.jackrabbit.test.api.query.TestAll</value>
                <value>org.apache.jackrabbit.test.api.query.qom.TestAll</value>
                <value>org.apache.jackrabbit.test.api.retention.TestAll</value>
                <value>org.apache.jackrabbit.test.api.security.TestAll</value>
                <value>org.apache.jackrabbit.test.api.util.TestAll</value>
                <value>org.apache.jackrabbit.test.api.version.TestAll</value>
                <value>org.apache.jackrabbit.test.api.version.simple.TestAll</value>
                <value>org.jahia.test.bin.RenderTest</value>
                <value>org.jahia.test.osgi.SpringBridgeTest</value>
                <value>org.jahia.test.osgi.SpringContextSingletonTest</value>
                <value>org.jahia.test.services.acl.AclTest</value>
                <!--<value>org.jahia.test.services.acl.AclExtendedNodesPerformanceTest</value>-->
                <!--<value>org.jahia.test.services.applications.ApplicationsManagerServiceTest</value>-->
                <value>org.jahia.test.services.categories.CategoryTest</value>
                <value>org.jahia.test.services.channels.ChannelsTest</value>
                <value>org.jahia.test.services.content.AutoSplittingTest</value>
                <value>org.jahia.test.services.content.ContentTest</value>
                <value>org.jahia.test.services.content.MarkForDeletionTest</value>
                <value>org.jahia.test.services.content.MultiLanguageTest</value>
                <value>org.jahia.test.services.content.PrecompileJspsTest</value>
                <value>org.jahia.test.services.content.ReferencesTest</value>
                <value>org.jahia.test.services.content.decorator.PasswordHistoryEntryDecoratorTest</value>
                <value>org.jahia.test.services.content.files.FileServletTest</value>
                <value>org.jahia.test.services.content.interceptor.HtmlFilteringInterceptorTest</value>
                <value>org.jahia.test.services.content.interceptor.URLInterceptorTest</value>
                <value>org.jahia.test.services.content.nodetypes.NodePropertyDefaultValueTest</value>
                <value>org.jahia.test.services.content.protection.JcrSettingsAccessTest</value>
                <value>org.jahia.test.services.content.protection.JsonViewAccessTest</value>
                <value>org.jahia.test.services.content.protection.RestApiAccessTest</value>
                <value>org.jahia.test.services.content.WeakReferenceRewireTest</value>
                <value>org.jahia.test.services.htmlvalidator.WAIValidatorTest</value>
                <value>org.jahia.test.services.i18n.ResourceBundleTest</value>
                <value>org.jahia.test.services.importexport.ImportExportTest</value>
                <value>org.jahia.test.services.logging.ModuleLoggingTest</value>
                <value>org.jahia.test.services.logout.LogoutTest</value>
                <value>org.jahia.test.services.notification.CamelNotificationServiceTest</value>
                <value>org.jahia.test.services.notification.HtmlExternalizationServiceTest</value>
                <value>org.jahia.test.services.notification.HttpClientServiceTest</value>
                <value>org.jahia.test.services.providers.ModulesProviderTest</value>
                <value>org.jahia.test.services.publication.PublicationTest</value>
                <value>org.jahia.test.services.query.FacetedQueryTest</value>
                <value>org.jahia.test.services.query.IndexOptionsTest</value>
                <value>org.jahia.test.services.query.NativeSortTest</value>
                <value>org.jahia.test.services.query.QueryAclCheckTest</value>
                <value>org.jahia.test.services.query.QueryModificationTest</value>
                <value>org.jahia.test.services.query.QueryResultTest</value>
                <value>org.jahia.test.services.readonly.FullReadOnlyModeTest</value>
                <value>org.jahia.test.services.render.JSessionIDTest</value>
                <value>org.jahia.test.services.render.LoginPageHttpTest</value>
                <value>org.jahia.test.services.render.filter.ConditionalFilterTest</value>
                <value>org.jahia.test.services.render.filter.EmailObfuscatorFilterTest</value>
                <value>org.jahia.test.services.render.filter.URLFilterTest</value>
                <value>org.jahia.test.services.render.filter.WrapperFilterTest</value>
                <value>org.jahia.test.services.render.filter.cache.OldCacheFilterHttpTest</value>
                <value>org.jahia.test.services.render.filter.cache.NewCacheFilterHttpTest</value>
                <value>org.jahia.test.services.render.filter.cache.OldCacheFilterTest</value>
                <value>org.jahia.test.services.render.filter.cache.NewCacheFilterTest</value>
                <value>org.jahia.test.services.render.filter.channels.ChannelResolutionAndExclusionTest</value>
                <value>org.jahia.test.services.render.filter.aggregate.AggregateFilterTest</value>
                <value>org.jahia.test.services.search.SimpleSearchTest</value>
                <value>org.jahia.test.services.search.SearchSuggestionsTest</value>
                <value>org.jahia.test.services.seo.urlrewrite.UrlRewriteTest</value>
                <value>org.jahia.test.services.sites.JahiaSitesServiceTest</value>
                <value>org.jahia.test.services.tags.TaggingTest</value>
                <value>org.jahia.test.services.templates.JahiaTemplateManagerServiceTest</value>
                <value>org.jahia.test.services.templates.ModuleBuildTest</value>
                <value>org.jahia.test.services.templates.ModuleDeploymentTest</value>
                <value>org.jahia.test.services.usermanager.JahiaGroupManagerServiceTest</value>
                <value>org.jahia.test.services.usermanager.LocalUserTest</value>
                <value>org.jahia.test.services.usermanager.UserFolderSplittingTest</value>
                <value>org.jahia.test.services.validation.ValidationTest</value>
                <value>org.jahia.test.services.vanity.VanityUrlManagerTest</value>
                <value>org.jahia.test.services.vanity.VanityUrlMapperTest</value>
                <value>org.jahia.test.services.vanity.VanityUrlServiceTest</value>
                <value>org.jahia.test.services.versioning.VersioningTest</value>
                <value>org.jahia.test.services.visibility.VisibilityServiceTest</value>
                <value>org.jahia.test.services.workflow.WorkflowPermissionsTest</value>
                <value>org.jahia.test.services.workflow.WorkflowServiceTest</value>
                <value>org.jahia.test.services.modules.ModulesAdministrationTest</value>
                <value>org.jahia.test.services.modules.ModulesStaticResourcesTest</value>
                <value>org.jahia.test.services.content.publication.PublicationInfoAggregationTest</value>
                <value>org.jahia.test.osgi.ConfigTest</value>
                <value>org.jahia.test.osgi.ConfigJspTest</value>
            </list>
        </property>

        <property name="ignoredTests">
            <list>
                <!-- Failing due to Jackrabbit bugs or known issues with test (check jackrabbit-jcr-rmi/pom.xml for known issues)-->

                <value>testExpandedNameValue(org.apache.jackrabbit.test.api.NameTest)</value>
                <value>testExpandedNameValueProperty(org.apache.jackrabbit.test.api.NameTest)</value>
                <value>testExpandedNodeTypeName(org.apache.jackrabbit.test.api.NameTest)</value>
                <value>testResolvedIdentifierBasedPropertyValue(org.apache.jackrabbit.test.api.PathTest)</value>
                <value>testHasCapability(org.apache.jackrabbit.test.api.SessionTest)</value>
                <value>testNodeNotReferenceable(org.apache.jackrabbit.test.api.SetValueValueFormatExceptionTest)</value>

                <value>testSave(org.apache.jackrabbit.test.api.observation.GetUserDataTest)</value>
                <value>testVersioning(org.apache.jackrabbit.test.api.observation.GetUserDataTest)</value>
                <value>testWorkspaceOperation(org.apache.jackrabbit.test.api.observation.GetUserDataTest)</value>
                <value>testNodeReorderMove(org.apache.jackrabbit.test.api.observation.NodeReorderTest)</value>

                <value>testElementTestNameTestSomeNTWithSNS(org.apache.jackrabbit.test.api.query.ElementTest)</value>

                <value>testRightOuterJoin(org.apache.jackrabbit.test.api.query.qom.ChildNodeJoinConditionTest)</value>
                <value>testRightOuterJoin(org.apache.jackrabbit.test.api.query.qom.DescendantNodeJoinConditionTest)</value>
                <value>testLeftOuterJoin2(org.apache.jackrabbit.test.api.query.qom.EquiJoinConditionTest)</value>
                <value>testRightOuterJoin1(org.apache.jackrabbit.test.api.query.qom.EquiJoinConditionTest)</value>
                <value>testPathLiteral(org.apache.jackrabbit.test.api.query.qom.NodeLocalNameTest)</value>
                <value>testStringLiteralInvalidName(org.apache.jackrabbit.test.api.query.qom.NodeLocalNameTest)</value>
                <value>testURILiteral(org.apache.jackrabbit.test.api.query.qom.NodeLocalNameTest)</value>
                <value>testRightOuterJoin(org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest)</value>
                <value>testLeftOuterJoin(org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest)</value>
                <value>testRightOuterJoinWithPath(org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest)</value>
                <value>testLeftOuterJoinWithPath(org.apache.jackrabbit.test.api.query.qom.SameNodeJoinConditionTest)</value>


                <!-- Failing due to incompatible Jahia modifications -->

                <value>testAddNodeRepositoryExceptionSaveOnNewNode(org.apache.jackrabbit.test.api.AddNodeTest)</value> <!-- Node.save() is deprecated anyway -->
                <value>testSameNameSiblings(org.apache.jackrabbit.test.api.AddNodeTest)</value> <!-- Same name siblings not supported with Jahia -->
                <value>testSameUUIDAtAncestorSession(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value> <!-- QA-12212 -->
                <value>testSessionImportXml(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testExportDocView_handler_session_skipBinary_recurse(org.apache.jackrabbit.test.api.ExportDocViewTest)</value>  <!-- QA-12212 for all in this and next class -->
                <value>testExportDocView_handler_session_saveBinary_recurse(org.apache.jackrabbit.test.api.ExportDocViewTest)</value>
                <value>testExportDocView_stream_session_skipBinary_recurse(org.apache.jackrabbit.test.api.ExportDocViewTest)</value>
                <value>testExportDocView_stream_session_saveBinary_recurse(org.apache.jackrabbit.test.api.ExportDocViewTest)</value>
                <value>testExportSysView_handler_session_saveBinary_recurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testExportSysView_handler_session_skipBinary_recurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testExportSysView_stream_session_saveBinary_noRecurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testExportSysView_stream_session_saveBinary_recurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testExportSysView_stream_session_skipBinary_noRecurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testExportSysView_stream_session_skipBinary_recurse(org.apache.jackrabbit.test.api.ExportSysViewTest)</value>
                <value>testGetNode(org.apache.jackrabbit.test.api.NamePropertyTest)</value>  <!-- Jahia throws PathNotFoundException instead of ItemNotFoundException -->
                <value>testGetProperty(org.apache.jackrabbit.test.api.NamePropertyTest)</value>
                <value>testRegisterNamespace(org.apache.jackrabbit.test.api.NamespaceRegistryTest)</value> <!-- QA-12211 for all in this and next class-->
                <value>testAutomaticNewLocalPrefix(org.apache.jackrabbit.test.api.NamespaceRemappingTest)</value>
                <value>testExceptionOnUnknownPrefix(org.apache.jackrabbit.test.api.NamespaceRemappingTest)</value>
                <value>testExceptionsFromRemapping(org.apache.jackrabbit.test.api.NamespaceRemappingTest)</value>
                <value>testGetNamespacePrefixes(org.apache.jackrabbit.test.api.NamespaceRemappingTest)</value>
                <value>testNamespaceRemapping(org.apache.jackrabbit.test.api.NamespaceRemappingTest)</value>
                <value>testSaveReferentialIntegrityException(org.apache.jackrabbit.test.api.NodeUUIDTest)</value>  <!-- Jahia only supports weak references -->
                <value>testAddNodeRepositoryExceptionSaveOnNewNode(org.apache.jackrabbit.test.api.NodeTest)</value>  <!-- Node.save() is deprecated anyway -->
                <value>testSaveOnNewNodeRepositoryException(org.apache.jackrabbit.test.api.NodeTest)</value> <!-- Node.save() is deprecated anyway -->
                <value>testIdentifierBasedPropertyValue(org.apache.jackrabbit.test.api.PathTest)</value>  <!-- QA-12210 for all in this class -->
                <value>testNotNormalizedPathValue(org.apache.jackrabbit.test.api.PathTest)</value>
                <value>testAlterReference(org.apache.jackrabbit.test.api.ReferencesTest)</value> <!-- QA-12213 for all in this class -->
                <value>testGetReferencesWithName(org.apache.jackrabbit.test.api.ReferencesTest)</value>
                <value>testReferences(org.apache.jackrabbit.test.api.ReferencesTest)</value>
                <value>testRequiredDescriptors(org.apache.jackrabbit.test.api.RepositoryDescriptorTest)</value> <!-- QA-12206 for all in this class -->
                <value>testGetDescriptorKeys(org.apache.jackrabbit.test.api.RepositoryDescriptorTest)</value>
                <value>testGetDescriptorValues(org.apache.jackrabbit.test.api.RepositoryDescriptorTest)</value>
                <value>testNoSuchWorkspaceException(org.apache.jackrabbit.test.api.RepositoryLoginTest)</value> <!-- QA-12214 -->
                <value>testRemoveItem2(org.apache.jackrabbit.test.api.SessionRemoveItemTest)</value> <!-- QA-12216 -->
                <value>testMoveConstraintViolationExceptionDest(org.apache.jackrabbit.test.api.SessionTest)</value>  <!-- Node.save() is deprecated anyway -->
                <value>testMoveConstraintViolationExceptionSrc(org.apache.jackrabbit.test.api.SessionTest)</value>  <!-- Node.save() is deprecated anyway -->
                <value>testSaveReferentialIntegrityException(org.apache.jackrabbit.test.api.SessionUUIDTest)</value> <!-- Jahia only supports weak references -->
                <value>testNodeAssumeTypeOfValue(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>   <!-- QA-12210 for all in this class -->
                <value>testString(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testStringConstraintViolationExceptionBecauseOfInvalidTypeParameter(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testValue(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testValueAssumeTypeOfValue(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testValues(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testValuesAssumeTypeOfValue(org.apache.jackrabbit.test.api.SetPropertyAssumeTypeTest)</value>
                <value>testSetMixedValueArrayValueFormatException(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value> <!-- Jahia throws a ConstraintViolationException instead of ValueFormatException -->
                <value>testSetMixedValueArrayValueFormatExceptionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value> <!-- Jahia throws a ConstraintViolationException instead of ValueFormatException -->
                <value>testUndefinedProperty(org.apache.jackrabbit.test.api.UndefinedPropertyTest)</value> <!-- QA-12210  -->
                <value>testValueFormatException(org.apache.jackrabbit.test.api.ValueFactoryTest)</value>  <!-- QA-12215 -->
                <value>testValueType(org.apache.jackrabbit.test.api.ValueFactoryTest)</value>  <!-- Jahia only supports weak references -->

                <value>testLockHoldingNode(org.apache.jackrabbit.test.api.lock.DeepLockTest)</value> <!-- NodeImpl.isSame does not find match when argument is our wrapper -->
                <value>testLockTransfer2(org.apache.jackrabbit.test.api.lock.LockManagerTest)</value> <!-- QA-12217 for this and next 4 failures-->
                <value>testLockTransfer3(org.apache.jackrabbit.test.api.lock.LockManagerTest)</value>
                <value>testAddLockTokenToAnotherSession(org.apache.jackrabbit.test.api.lock.LockManagerTest)</value>
                <value>testRemoveLockTokenTwice(org.apache.jackrabbit.test.api.lock.LockManagerTest)</value>
                <value>testAddInvalidLockToken(org.apache.jackrabbit.test.api.lock.LockManagerTest)</value>
                <value>testLockHoldingNode(org.apache.jackrabbit.test.api.lock.OpenScopedLockTest)</value>  <!-- NodeImpl.isSame does not find match when argument is our wrapper -->
                <value>testGetLockOnNewChild(org.apache.jackrabbit.test.api.lock.OpenScopedLockTest)</value> <!-- node.getLock() method catches exceptions in our wrapper on purpose (?) -->
                <value>testGetLockOnChild(org.apache.jackrabbit.test.api.lock.OpenScopedLockTest)</value> <!-- node.getLock() method catches exceptions in our wrapper on purpose (?) -->
                <value>testImplicitUnlock2(org.apache.jackrabbit.test.api.lock.SessionScopedLockTest)</value> <!-- QA-12218 -->
                <value>testLockHoldingNode(org.apache.jackrabbit.test.api.lock.SessionScopedLockTest)</value>  <!-- NodeImpl.isSame does not find match when argument is our wrapper -->
                <value>testGetLockOnNewChild(org.apache.jackrabbit.test.api.lock.SessionScopedLockTest)</value> <!-- node.getLock() method catches exceptions in our wrapper on purpose (?) -->
                <value>testGetLockOnChild(org.apache.jackrabbit.test.api.lock.SessionScopedLockTest)</value> <!-- node.getLock() method catches exceptions in our wrapper on purpose (?) -->

                <value>testResidualWithDefault(org.apache.jackrabbit.test.api.nodetype.CanAddChildNodeCallWithoutNodeTypeTest)</value>  <!-- QA-12220 for all *.nodetype.Can* failures -->
                <value>testMandatoryChildNode(org.apache.jackrabbit.test.api.nodetype.CanRemoveItemTest)</value>
                <value>testProtectedChildNode(org.apache.jackrabbit.test.api.nodetype.CanRemoveItemTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyBooleanTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyDateTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyDoubleTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyLongTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyNameTest)</value>
                <value>testConversionsMultiple(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyNameTest)</value>
                <value>testValueConstraintNotSatisfied(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyNameTest)</value>
                <value>testConversions(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyPathTest)</value>
                <value>testConversionsMultiple(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyPathTest)</value>
                <value>testValueConstraintNotSatisfied(org.apache.jackrabbit.test.api.nodetype.CanSetPropertyPathTest)</value>
                <value>testIsNodeTypeQName(org.apache.jackrabbit.test.api.nodetype.NodeTypeTest)</value> <!-- QA-12219 -->
                <value>org.apache.jackrabbit.test.api.nodetype.PredefinedNodeTypeTest</value> <!-- changes have been done on purpose -->

                <value>testIsDeepFalseNodeAdded(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>  <!-- QA-12221 for all failures in this class -->
                <value>testIsDeepFalsePropertyAdded(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>
                <value>testNoLocalTrue(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>
                <value>testNodeType(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>
                <value>testPath(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>
                <value>testUUID(org.apache.jackrabbit.test.api.observation.AddEventListenerTest)</value>
                <value>testNodeMoved(org.apache.jackrabbit.test.api.observation.GetIdentifierTest)</value> <!-- Looks like a bug in the test for me -->
                <value>testGetSize(org.apache.jackrabbit.test.api.observation.GetRegisteredEventListenersTest)</value>  <!-- changes have been done on purpose -->
                <value>testRemoveEventListener(org.apache.jackrabbit.test.api.observation.GetRegisteredEventListenersTest)</value>
                <value>testAddLockToNode(org.apache.jackrabbit.test.api.observation.LockingTest)</value> <!-- no events for lock related properties may get ignored -->
                <value>testRemoveLockFromNode(org.apache.jackrabbit.test.api.observation.LockingTest)</value>
                <value>testItemExistsException(org.apache.jackrabbit.test.api.query.SaveTest)</value>

                <value>org.apache.jackrabbit.test.api.query.qom.BindVariableValueTest</value> <!-- feature possibility has been removed to improve performance -->

                <value>testCheckoutNonVersionableNode(org.apache.jackrabbit.test.api.version.CheckoutTest)</value>         <!-- no exception throwing probably done on purpose -->
                <value>testGetVersionLabelsForVersion(org.apache.jackrabbit.test.api.version.VersionLabelTest)</value>     <!-- QA-12222 for all in this class -->
                <value>testGetVersionLabelsForVersionJcr2(org.apache.jackrabbit.test.api.version.VersionLabelTest)</value>
                <value>testHasVersionLabelForVersion(org.apache.jackrabbit.test.api.version.VersionLabelTest)</value>

                <!-- Failing due to incompatible Jahia modifications : UnsupportedRepositoryOperationException by Jahia code -->

                <value>testCheckPermission(org.apache.jackrabbit.test.api.CheckPermissionTest)</value>
                <value>testSameUUIDAtAncestorSessionHandler(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testSameUUIDAtAncestorWorkspace(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testSameUUIDAtAncestorWorkspaceHandler(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testSessionGetImportContentHandler(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testWorkspaceGetImportContentHandler(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testWorkspaceImportXml(org.apache.jackrabbit.test.api.DocumentViewImportTest)</value>
                <value>testAdminPermission(org.apache.jackrabbit.test.api.HasPermissionTest)</value>
                <value>testReadOnlyPermission(org.apache.jackrabbit.test.api.HasPermissionTest)</value>
                <value>testReadWritePermission(org.apache.jackrabbit.test.api.HasPermissionTest)</value>
                <value>testImpersonate(org.apache.jackrabbit.test.api.ImpersonateTest)</value>
                <value>testAddNonExisting(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testCheckedIn(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testLocked(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testSetAbstractAsPrimaryType(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testSetCurrentType(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testSetCurrentTypeOnNew(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testSetMixinAsPrimaryType(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>testSetPrimaryType(org.apache.jackrabbit.test.api.NodeSetPrimaryTypeTest)</value>
                <value>org.apache.jackrabbit.test.api.SerializationTest</value>
                <value>testCloneNodesNodeExistsAtDestPath(org.apache.jackrabbit.test.api.WorkspaceCloneSameNameSibsTest)</value>
                <value>testCloneNodesOrderingSupportedByParent(org.apache.jackrabbit.test.api.WorkspaceCloneSameNameSibsTest)</value>
                <value>testCloneNodesReferenceableAndNonreferenceable(org.apache.jackrabbit.test.api.WorkspaceCloneReferenceableTest)</value>
                <value>testCloneNodesReferenceableNodesOriginalUUID(org.apache.jackrabbit.test.api.WorkspaceCloneReferenceableTest)</value>
                <value>testCloneNodesRemoveExistingFalse(org.apache.jackrabbit.test.api.WorkspaceCloneReferenceableTest)</value>
                <value>testCloneNodesRemoveExistingTrue(org.apache.jackrabbit.test.api.WorkspaceCloneReferenceableTest)</value>
                <value>testCloneNodes(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesAbsolutePath(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesAccessDenied(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesConstraintViolationException(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesInvalidWorkspace(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesLocked(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesPathNotExisting(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesTwice(org.apache.jackrabbit.test.api.WorkspaceCloneTest)</value>
                <value>testCloneNodesVersionableAndCheckedIn(org.apache.jackrabbit.test.api.WorkspaceCloneVersionableTest)</value>
                <value>testCopyNodes(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesAbsolutePath(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesAccessDenied(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesConstraintViolationException(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesInvalidWorkspace(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesLocked(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesNodeExistsAtDestPath(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesSameNameSibsTest)</value>
                <value>testCopyNodesOrderingSupportedByParent(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesSameNameSibsTest)</value>
                <value>testCopyNodesPathNotExisting(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesTest)</value>
                <value>testCopyNodesReferenceableNodesNewUUID(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesReferenceableTest)</value>
                <value>testCopyNodesVersionableAndCheckedIn(org.apache.jackrabbit.test.api.WorkspaceCopyBetweenWorkspacesVersionableTest)</value>

                <value>testMergeNodeCancelMerge(org.apache.jackrabbit.test.api.version.MergeCancelMergeTest)</value>
                <value>testFailIfCorrespondingNodeIsSuccessor(org.apache.jackrabbit.test.api.version.MergeCheckedoutSubNodeTest)</value>
                <value>testLeaveIfCorrespondingNodeIsPredeccessor(org.apache.jackrabbit.test.api.version.MergeCheckedoutSubNodeTest)</value>
                <value>testMergeNodeDoneMerge(org.apache.jackrabbit.test.api.version.MergeDoneMergeTest)</value>
                <value>testNodeIterator(org.apache.jackrabbit.test.api.version.MergeNodeIteratorTest)</value>
                <value>testMergeNodeBestEffortFalse(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeBestEffortFalseAmbiguousVersions(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeBestEffortTrueCheckMergeFailedProperty(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeNonCorrespondingNode(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeVersionAmbiguous(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeWithUnsavedStates(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeUnknownWorkspaceName(org.apache.jackrabbit.test.api.version.MergeNodeTest)</value>
                <value>testMergeNodeNonVersionableSubNodeLeave(org.apache.jackrabbit.test.api.version.MergeNonVersionableSubNodeTest)</value>
                <value>testMergeNodeNonVersionableSubNodeNonVersionableAncestor(org.apache.jackrabbit.test.api.version.MergeNonVersionableSubNodeTest)</value>
                <value>testMergeNodeNonVersionableSubNodeUpdate(org.apache.jackrabbit.test.api.version.MergeNonVersionableSubNodeTest)</value>
                <value>testMergeNodeFromOlderSourceWorkspace(org.apache.jackrabbit.test.api.version.MergeSubNodeTest)</value>
                <value>testCheckout(org.apache.jackrabbit.test.api.version.VersionHistoryTest)</value>
                <value>testMerge(org.apache.jackrabbit.test.api.version.VersionHistoryTest)</value>
                <value>testMerge(org.apache.jackrabbit.test.api.version.VersionTest)</value>
                <value>testWorkspaceRestoreHasCorrespondingNode(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreOnCheckedInNode(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreOnCheckedOutNode(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreWithParent(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreWithRemoveExisting(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreWithUUIDConflict(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>
                <value>testWorkspaceRestoreWithPendingChanges(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)</value>

                <!-- Failing due to incompatible Jahia modifications : Value wrapper problems with identity checks implemented in StringValue.equals and DateValue.equals-->

                <value>testModifyCalendarPropertyParent(org.apache.jackrabbit.test.api.SetPropertyCalendarTest)</value>
                <value>testModifyCalendarPropertySession(org.apache.jackrabbit.test.api.SetPropertyCalendarTest)</value>
                <value>testNewCalendarPropertyParent(org.apache.jackrabbit.test.api.SetPropertyCalendarTest)</value>
                <value>testNewCalendarPropertySession(org.apache.jackrabbit.test.api.SetPropertyCalendarTest)</value>
                <value>testModifyStringArrayPropertyParent(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testModifyStringArrayPropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testModifyStringArrayPropertySession(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testModifyStringArrayPropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testNewStringArrayPropertyParent(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testNewStringArrayPropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testNewStringArrayPropertySession(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testNewStringArrayPropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyStringTest)</value>
                <value>testModifyValueArrayPropertyParent(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValueArrayPropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValueArrayPropertySession(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValueArrayPropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValuePropertyParent(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValuePropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValuePropertySession(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testModifyValuePropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValueArrayPropertyParent(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValueArrayPropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValueArrayPropertySession(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValueArrayPropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValuePropertyParent(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValuePropertyParentWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValuePropertySession(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testNewValuePropertySessionWithPropertyType(org.apache.jackrabbit.test.api.SetPropertyValueTest)</value>
                <value>testDateParent(org.apache.jackrabbit.test.api.SetValueDateTest)</value>
                <value>testDateSession(org.apache.jackrabbit.test.api.SetValueDateTest)</value>
                <value>testNullMultiValue(org.apache.jackrabbit.test.api.SetValueStringTest)</value>
                <value>testMultiValueParent(org.apache.jackrabbit.test.api.SetValueStringTest)</value>
                <value>testMultiValueSession(org.apache.jackrabbit.test.api.SetValueStringTest)</value>
                <value>testValueParent(org.apache.jackrabbit.test.api.SetValueStringTest)</value>
                <value>testValueSession(org.apache.jackrabbit.test.api.SetValueStringTest)</value>


                <!--Test needs to be removed or rewritten-->

                <value>testEntryPointDefinitions(org.jahia.test.services.applications.ApplicationsManagerServiceTest)</value>
                <value>testEntryPointInstance(org.jahia.test.services.applications.ApplicationsManagerServiceTest)</value>
                <value>testUniqueValue(org.jahia.test.services.i18n.ResourceBundleTest)</value>
                <value>testPublishUnpublishPageWithContent(org.jahia.test.services.publication.PublicationTest)</value>
                <value>testWithJoins(org.jahia.test.services.query.QueryModificationTest)</value>
                <value>testWithReferences(org.jahia.test.services.query.QueryModificationTest)</value>
            </list>
        </property>

    </bean>

    <bean class="org.jahia.services.content.decorator.validation.JCRNodeValidatorDefinition">
        <property name="validators">
            <map>
                <entry key="test:validatedNode" value="org.jahia.test.services.validation.TestValidatedNodeValidator"/>
            </map>
        </property>
    </bean>

    <bean name="testController" class="org.jahia.test.bin.TestServlet"/>
    <bean name="testCreateSiteController" class="org.jahia.test.bin.TestCreateSiteServlet"/>
    <bean name="jahiaTestMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
        <property name="urlMap">
            <map>
                <entry key="/test" value-ref="testController"/>
                <entry key="/test.html" value-ref="testController"/>
                <entry key="/test/**" value-ref="testController"/>
                <entry key="/createsite" value-ref="testCreateSiteController"/>
            </map>
        </property>
    </bean>

    <!-- first filter in chain -->
    <bean id="CacheHttpTestRenderFilter1"  class="org.jahia.test.services.render.filter.cache.CacheFilterCheckFilter">
        <property name="priority" value="-99"/>
        <property name="disabled" value="true"/>
    </bean>

    <!-- filter coming just after the cache in chain -->
    <bean id="CacheHttpTestRenderFilter2" class="org.jahia.test.services.render.filter.cache.CacheFilterCheckFilter">
        <property name="priority" value="16.6"/>
        <property name="disabled" value="true"/>
    </bean>

    <bean id="ReadOnlyModeCapablePlaceholder" class="org.jahia.test.services.readonly.ReadOnlyModeCapablePlaceholder"/>

    <bean id="testPingProtectedAction" class="org.jahia.test.bin.actions.TestPingAction">
        <property name="name" value="testPingProtected"/>
    </bean>
    <bean id="testPingPublicFirstAction" class="org.jahia.test.bin.actions.TestPingAction">
        <property name="name" value="testPingPublicFirst"/>
        <property name="requireAuthenticatedUser" value="false"/>
    </bean>
    <bean id="testPingPublicSecondAction" class="org.jahia.test.bin.actions.TestPingAction">
        <property name="name" value="testPingPublicSecond"/>
        <property name="requireAuthenticatedUser" value="false"/>
    </bean>
</beans>
