################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# Comma separated list of features repositories to register by default
#
featuresRepositories = \
    mvn:org.ops4j.pax.web/pax-web-features/${pax.web.api.version}/xml/features, \
    mvn:org.apache.karaf.features/standard/${karaf.version}/xml/features, \
    mvn:org.apache.karaf.features/framework/${karaf.version}/xml/features, \
    mvn:org.apache.karaf.features/enterprise/${karaf.version}/xml/features, \
    mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features, \
    mvn:org.apache.karaf.features/specs/${karaf.version}/xml/features, \
    mvn:org.jahia.features/dx-standard/${project.version}/xml/features

#
# Comma separated list of features to install at startup
#
featuresBoot = \
    (instance/4.3.9, \
    package/4.3.9, \
    log/4.3.9, \
    ssh/4.3.9, \
    framework/4.3.9, \
    system/4.3.9, \
    eventadmin/4.3.9, \
    feature/4.3.9, \
    shell/4.3.9, \
    service/4.3.9, \
    jaas/4.3.9, \
    deployer/4.3.9, \
    diagnostic/4.3.9, \
    wrap/2.6.12, \
    bundle/4.3.9, \
    config/4.3.9, \
    kar/4.3.9), \
    dx-standard

#
# Resource repositories (OBR) that the features resolver can use
# to resolve requirements/capabilities
#
# The format of the resourceRepositories is
# resourceRepositories=[xml:url|json:url],...
# for Instance:
#
#resourceRepositories=xml:http://host/path/to/index.xml
# or
#resourceRepositories=json:http://host/path/to/index.json
#

#
# Defines if the boot features are started in asynchronous mode (in a dedicated thread)
#
featuresBootAsynchronous=false

#
# Service requirements enforcement
#
# By default, the feature resolver checks the service requirements/capabilities of
# bundles for new features (xml schema >= 1.3.0) in order to automatically installs
# the required bundles.
# The following flag can have those values:
#   - disable: service requirements are completely ignored
#   - default: service requirements are ignored for old features
#   - enforce: service requirements are always verified
#
#serviceRequirements=default

#
# Store cfg file for config element in feature
#
#configCfgStore=true

#
# Configuration of features processing mechanism (overrides, blacklisting, modification of features)
# XML file defines instructions related to features processing
# versions.properties may declare properties to resolve placeholders in XML file
# both files are relative to ${karaf.etc}
#
#featureProcessing=org.apache.karaf.features.xml
#featureProcessingVersions=versions.properties
